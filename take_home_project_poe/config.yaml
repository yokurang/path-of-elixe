poe_sessid: "REPLACE_ME"
cf_clearance: "REPLACE_ME"

base_currency: "Exalted Orb" # for FX conversion in your pipeline
base_server:   "Standard"

league: "Rise of the Abyssal"
realm:  "poe2"

num_workers: 6
concurrency: 2
rps: 1.0
timeout: 30
max_retries: 5
post_request_pause: 1.0

# =========================
# QUERY
# =========================
status:
  option: "any"   # "online" | "offline" | "any"

# -------------------------
# NAME / TYPE SEARCH (optional convenience block)
# These map to the UI’s Name/Type inputs (leave disabled if you drive via stats/filters).
# -------------------------
name_type:
  disabled: true
  name: null               # exact name (e.g., "Headhunter")
  type: null               # base type (e.g., "Vaal Regalia", "Crude Bow")

# -------------------------
# RARITY FILTER (simple rarity gate)
# -------------------------
rarity_filter:
  disabled: true
  option: null             # "normal" | "magic" | "rare" | "unique" | "any"

# -------------------------
# STATS (most powerful section)
# You can stack multiple blocks, each "and"/"or". Put stat ids in filters[].id
# -------------------------
stats:
  - type: "and"
    disabled: true
    filters:
      # Example explicit stat ids (Paste from site devtools or bulk-copy from URL payload)
      # - id: "explicit.stat_12345"
      #   value: { min: 10, max: 25 }
      #   disabled: false
      # - id: "implicit.stat_67890"
      #   value: { min: 1 }
      #   disabled: false
  - type: "or"
    disabled: true
    filters: []
  # Add more blocks as needed

# -------------------------
# FILTER TREE
# Each subgroup mirrors the site’s “Filters” tabs.
# Toggle group with disabled: true|false.
# -------------------------
filters:

  # =============== TYPE FILTERS (choose WHAT item) ===============
  type_filters:
    disabled: false
    filters:
      category:
        option: "weapon.wand"
        # All valid options from your HeaderParser (PoE2+PoE superset):
        # Accessories
        #   accessory.amulet | accessory.belt | accessory.ring | accessory.trinket
        # Armour
        #   armour.chest | armour.boots | armour.gloves | armour.helmet
        #   armour.quiver | armour.shield | armour.focus | armour.buckler
        # Weapons
        #   weapon.bow | weapon.crossbow | weapon.claw | weapon.dagger | weapon.runedagger
        #   weapon.oneaxe | weapon.onemace | weapon.onesword | weapon.sceptre
        #   weapon.staff | weapon.rod | weapon.twoaxe | weapon.twomace
        #   weapon.twosword | weapon.wand | weapon.warstaff | weapon.spear
        # Flasks
        #   flask.life | flask.mana | flask          # (PoE1 "flask" = hybrid/utility)
        # Gems
        #   gem.activegem | gem.supportgem
        # Jewels
        #   jewel | jewel.abyss
        # Maps & Map-likes
        #   map | map.fragment | map.waystone | map.breachstone | map.barya
        #   map.bosskey | map.ultimatum | map.tablet
        # Other
        #   card | currency.resonator | currency.heistobjective | currency.omen | currency.socketable
        #   heistmission.blueprint | heistmission.contract
        #   heistequipment.heistreward | heistequipment.heistutility | heistequipment.heistweapon | heistequipment.heisttool
        #   logbook | memoryline | monster.sample | tincture | corpse
        #   sanctum.relic | sanctum.research

      # Optional base-type name filters (work best with precise types)
      # base_type: { option: "Crude Bow" }   # literal base type text
      # item_name: { option: "Inpulsa's Broken Heart" }  # exact unique name

  # =============== TRADE FILTERS (pricing/listing state) ===============
  trade_filters:
    disabled: false
    filters:
      price:
        option: "aug"        # "exact"|"any"|"no"|"b/o"|"negotiable" vary by UI;
                             # "aug" in your example == priced/buyout only
        min: null
        max: null
        currency: null       # e.g., "chaos" (usually omit so site default applies)
      indexed:
        option: null         # e.g., "1day"|"3days"|"1week" (site formats)
      seller:
        account: null        # string match for seller account name
      online:
        option: "any"        # "online"|"any"

  # =============== MISC FILTERS (general flags) ===============
  misc_filters:
    disabled: true
    filters:
      corrupted: { option: "any" }    # "true"|"false"|"any"
      mirrored:  { option: "any" }
      identified:{ option: "any" }
      crafted:   { option: "any" }    # has crafted modifier
      enchanted: { option: "any" }
      veiled:    { option: "any" }
      quality:   { min: null, max: null }   # item quality %
      ilvl:      { min: null, max: null }   # item level
      stack_size:{ min: null, max: null }   # for currency/stackables
      # influence: { option: "shaper|elder|crusader|redeemer|warlord|hunter" } # PoE1

  # =============== REQUIREMENTS (char requirements on item) ===============
  requirements_filters:
    disabled: true
    filters:
      level: { min: null, max: null }
      str:   { min: null, max: null }
      dex:   { min: null, max: null }
      int:   { min: null, max: null }

  # =============== SOCKETS/LINKS (gear only) ===============
  socket_filters:
    disabled: true
    filters:
      sockets:     { min: null, max: null }   # total sockets
      links:       { min: null, max: null }   # max linked sockets
      # color counts (R/G/B/W total, or per-group UI equivalents)
      r: { min: null, max: null }
      g: { min: null, max: null }
      b: { min: null, max: null }
      w: { min: null, max: null }

  # =============== WEAPON FILTERS ===============
  weapon_filters:
    disabled: true
    filters:
      pdps: { min: null, max: null }      # physical DPS
      edps: { min: null, max: null }      # elemental DPS
      dps:  { min: null, max: null }      # total DPS (if exposed)
      aps:  { min: null, max: null }      # attacks per second
      crit: { min: null, max: null }      # critical strike chance %
      pDmg: { min: null, max: null }      # base phys damage (avg)
      eDmg: { min: null, max: null }      # base ele damage (avg)

  # =============== ARMOUR FILTERS ===============
  armour_filters:
    disabled: true
    filters:
      ar: { min: null, max: null }   # armour
      ev: { min: null, max: null }   # evasion
      es: { min: null, max: null }   # energy shield
      block: { min: null, max: null }

  # =============== GEM FILTERS ===============
  gem_filters:
    disabled: true
    filters:
      quality: { min: null, max: null }
      level:   { min: null, max: null }
      vaal:    { option: "any" }     # "true"|"false"|"any"
      corrupted:{ option: "any" }

  # =============== MAP FILTERS (and map-likes) ===============
  map_filters:
    disabled: true
    filters:
      tier:     { min: null, max: null }
      item_qty: { min: null, max: null }   # quantity on the map
      pack_size:{ min: null, max: null }
      rarity:   { option: "any" }          # magic/rare/unique/any map
      # series/atlas region filters vary by league content

  # =============== JEWEL FILTERS ===============
  jewel_filters:
    disabled: true
    filters:
      # place-holder; most jewel specifics are handled via explicit stat ids
      abyss_only: { option: "any" }  # if you want to distinguish jewel.abyss

  # =============== FLASK FILTERS ===============
  flask_filters:
    disabled: true
    filters:
      quality: { min: null, max: null }
      # duration/charges usually via explicit stats

  # =============== HEIST (missions/equipment) ===============
  heist_filters:
    disabled: true
    filters:
      # blueprints/contracts specifics typically stat-driven (wings, reveals, etc.)
      obj_level: { min: null, max: null }

  # =============== SANCTUM / LOGBOOK / MISC SPECIALS ===============
  special_filters:
    disabled: true
    filters:
      # keep as a parking place for league-specific toggles your pipeline may add
      note: null

# -------------------------
# SORT ORDER
# -------------------------
sort:
  price: "asc"   # "asc"|"desc"
